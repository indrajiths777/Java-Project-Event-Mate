package projk;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.net.URL;

public class OpenPg {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(OpenPg::createMainWindow);
    }

    private static void createMainWindow() {
        JFrame frame = new JFrame("Event Manager");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setBackground(Color.WHITE);

        ImageIcon icon = loadScaledIcon("/icon/icon.png", 300, 300);
        if (icon == null) {
            JOptionPane.showMessageDialog(frame, "Image not found: /icon/icon.png", "Error", JOptionPane.ERROR_MESSAGE);
            frame.setSize(300, 100);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
            return;
        }

        JLabel imageLabel = new JLabel(icon);
        imageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);

        JButton bookButton = createStyledButton("Book an Event");
        JButton addButton = createStyledButton("Add an Event");

        bookButton.addActionListener(e -> openLoginWindow());
        addButton.addActionListener(e -> openEventForm());

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setBackground(Color.WHITE);
        panel.add(Box.createVerticalStrut(20));
        panel.add(imageLabel);
        panel.add(Box.createVerticalStrut(30));
        panel.add(bookButton);
        panel.add(Box.createVerticalStrut(15));
        panel.add(addButton);
        panel.add(Box.createVerticalStrut(20));

        frame.setIconImage(icon.getImage());
        frame.add(panel);
        frame.pack();
        frame.setMinimumSize(new Dimension(400, 450));
        frame.setLocationRelativeTo(null);
        frame.setResizable(false);
        frame.setVisible(true);
    }

    private static ImageIcon loadScaledIcon(String path, int width, int height) {
        URL imgURL = OpenPg.class.getResource(path);
        if (imgURL != null) {
            ImageIcon originalIcon = new ImageIcon(imgURL);
            Image scaledImage = originalIcon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
            return new ImageIcon(scaledImage);
        }
        return null;
    }

    private static JButton createStyledButton(String text) {
        JButton button = new JButton(text);
        button.setFont(new Font("Arial", Font.BOLD, 16));
        button.setAlignmentX(Component.CENTER_ALIGNMENT);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        button.setMaximumSize(new Dimension(200, 40));
        return button;
    }

    private static void openLoginWindow() {
        JFrame loginFrame = new JFrame("Admin Login");
        loginFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        loginFrame.setSize(350, 250);
        loginFrame.setLayout(new GridBagLayout());
        loginFrame.setLocationRelativeTo(null);
        loginFrame.setResizable(false);

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel userLabel = new JLabel("Username:");
        JTextField userField = new JTextField(15);

        JLabel passLabel = new JLabel("Password:");
        JPasswordField passField = new JPasswordField(15);

        JButton loginButton = createStyledButton("Login");
        JButton backButton = createStyledButton("Back");

        loginButton.addActionListener(e -> {
            String username = userField.getText().trim();
            String password = new String(passField.getPassword());

            if (username.equalsIgnoreCase("admin") && password.equals("admin123")) {
                JOptionPane.showMessageDialog(loginFrame, "Login successful!");
                loginFrame.dispose();
                // Proceed to next screen here
            } else {
                JOptionPane.showMessageDialog(loginFrame, "Invalid credentials.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        backButton.addActionListener(e -> loginFrame.dispose());

        gbc.gridx = 0; gbc.gridy = 0;
        loginFrame.add(userLabel, gbc);
        gbc.gridx = 1;
        loginFrame.add(userField, gbc);

        gbc.gridx = 0; gbc.gridy = 1;
        loginFrame.add(passLabel, gbc);
        gbc.gridx = 1;
        loginFrame.add(passField, gbc);

        gbc.gridx = 0; gbc.gridy = 2; gbc.gridwidth = 2;
        loginFrame.add(loginButton, gbc);

        gbc.gridy = 3;
        loginFrame.add(backButton, gbc);

        loginFrame.setVisible(true);
    }

    private static void openEventForm() {
        JFrame eventFrame = new JFrame("Add New Event");
        eventFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        eventFrame.setSize(400, 400);
        eventFrame.setLayout(new GridBagLayout());
        eventFrame.setLocationRelativeTo(null);
        eventFrame.setResizable(false);

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(8, 8, 8, 8);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JTextField nameField = new JTextField(20);
        JTextField venueField = new JTextField(20);
        JTextField dateField = new JTextField(20);
        JTextField collegeField = new JTextField(20);

        JButton submitButton = createStyledButton("Submit");
        JButton backButton = createStyledButton("Back");

        JPanel namePanel = createClearableField(nameField);
        JPanel venuePanel = createClearableField(venueField);
        JPanel datePanel = createClearableField(dateField);
        JPanel collegePanel = createClearableField(collegeField);

        gbc.gridx = 0; gbc.gridy = 0;
        eventFrame.add(new JLabel("Event Name:"), gbc);
        gbc.gridx = 1;
        eventFrame.add(namePanel, gbc);

        gbc.gridx = 0; gbc.gridy = 1;
        eventFrame.add(new JLabel("Venue:"), gbc);
        gbc.gridx = 1;
        eventFrame.add(venuePanel, gbc);

        gbc.gridx = 0; gbc.gridy = 2;
        eventFrame.add(new JLabel("Date:"), gbc);
        gbc.gridx = 1;
        eventFrame.add(datePanel, gbc);

        gbc.gridx = 0; gbc.gridy = 3;
        eventFrame.add(new JLabel("College:"), gbc);
        gbc.gridx = 1;
        eventFrame.add(collegePanel, gbc);

        gbc.gridx = 0; gbc.gridy = 4; gbc.gridwidth = 2;
        eventFrame.add(submitButton, gbc);

        gbc.gridy = 5;
        eventFrame.add(backButton, gbc);

        submitButton.addActionListener(e -> {
            String eventName = nameField.getText().trim();
            String venue = venueField.getText().trim();
            String date = dateField.getText().trim();
            String college = collegeField.getText().trim();

            if (eventName.isEmpty() || venue.isEmpty() || date.isEmpty() || college.isEmpty()) {
                JOptionPane.showMessageDialog(eventFrame, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(eventFrame, "Event added successfully!");
                eventFrame.dispose();
            }
        });

        backButton.addActionListener(e -> eventFrame.dispose());

        eventFrame.setVisible(true);
    }

    private static JPanel createClearableField(JTextField textField) {
        JPanel panel = new JPanel(new BorderLayout());
        panel.add(textField, BorderLayout.CENTER);

        JButton clearButton = new JButton("Ã—");
        clearButton.setMargin(new Insets(1, 5, 1, 5));
        clearButton.setFocusable(false);
        clearButton.setFont(new Font("Arial", Font.BOLD, 12));
        clearButton.setForeground(Color.RED);
        clearButton.setToolTipText("Clear");

        clearButton.addActionListener(e -> textField.setText(""));
        panel.add(clearButton, BorderLayout.EAST);

        return panel;
    }
}
